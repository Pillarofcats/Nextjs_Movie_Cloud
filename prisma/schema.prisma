// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

//Prisma Models
//(MongoDB uses: _id)

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  image         String?
  email         String?   @unique
  emailVerified DateTime?
  hashPassword  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  favoriteIds   String[]  @db.ObjectId
  //linked models to this model User
  sessions      Session[]
  accounts      Account[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  //Connecting "User" model to "Account" model using the @relation fields: [userId]
  //References "User" model [id]
  //When "User" is deleted the linked model "Account" will also be deleted as per @relation onDelete: Cascade
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Movie {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  videoUrl     String
  thumbnailUrl String
  genre        String
  duration     String
  release      DateTime
  longDesc     String
}
